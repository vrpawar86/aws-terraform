{{- $fullname := include "generate.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "generate.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: {{ $fullname }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "generate.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "generate.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum | quote }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      volumes:
        {{- if .Values.alertingGroups }}
        - name: rules
          configMap:
            name: {{ $fullname | printf "%s-alerting" }}
        {{- end }}
        - name: secrets
          secret:
            secretName: {{ $fullname }}
        - name: configs
          configMap:
            name: {{ $fullname }}
            optional: true
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "generate.image" . }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          args:
            - -config.file=/secrets/loki.yaml
            {{- with .Values.extraArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if or .Values.tracing.enabled .Values.extraEnvVars }}
          env:
            {{- if .Values.tracing.enabled }}
            - name: JAEGER_AGENT_HOST
              value: {{ .Values.tracing.jaegerAgentHost | toString | quote }}
            - name: JAEGER_AGENT_PORT
              value: {{ .Values.tracing.jaegerAgentPort | toString | quote }}
            - name: JAEGER_SERVICE_NAME
              value: {{ default $fullname .Values.tracing.jaegerServiceName | toString | quote }}
            - name: JAEGER_TAGS
              value: {{ .Values.tracing.jaegerTags | toString | quote }}
            {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- toYaml .Values.extraEnvVars | nindent 12 }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.server.httpPort }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.server.grpcPort }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 45
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.postStartHook .Values.preStopHook }}
          lifecycle:
            {{- with .Values.postStartHook }}
            postStart:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- with .Values.preStopHook }}
            preStop:
              {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            runAsGroup: 10001
            runAsUser: 10001
            readOnlyRootFilesystem: true
          volumeMounts:
            {{- if .Values.alertingGroups }}
            - name: rules
              mountPath: /rules
            {{- end }}
            - name: secrets
              mountPath: /secrets
            - name: configs
              mountPath: /configs
            - name: data
              mountPath: /data
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.ephemeralContainers }}
      ephemeralContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "generate.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if ne (int .Values.priority) 0 }}
      priority: {{ .Values.priority }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.runtimeClassName }}
      runtimeClassName: {{ .Values.runtimeClassName }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      {{-   with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{-   toYaml . | nindent 8 }}
      {{-   end }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
        creationTimestamp: null
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        {{- with .Values.persistence.accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClassName }}
        storageClassName: {{ .Values.persistence.storageClassName | quote }}
        {{- end }}
        volumeMode: {{ .Values.persistence.volumeMode | quote }}
        {{- with .Values.persistence.selector }}
        selector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.persistence.dataSource }}
        dataSource:
          {{- toYaml . | nindent 10 }}
        {{- end }}
  {{- end }}
  serviceName: {{ printf "%s-pods" (include "generate.fullname" .) | trunc 63 | trimSuffix "-" }}
  {{- if .Values.podManagementPolicy }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  {{- end }}
  {{- with .Values.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
